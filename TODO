Plan for git integration
- able to put https://github.com/.../foo.git in scripts.py
- vimp get foo:
  - if foo in scripts.py, proceed as normal
  - if not
    - check vim-script.org
    - consider if we can check vim.org as well
    - if so, do above in parallell
    - if found, add to local cache (not scripts.py) and proceed as normal
- vimp push
  - should be anonymous, or require explicit user acceptance to send a vimp
    pull req for local scripts that are not in scripts.py
  - users can then easily help adding to vimp scripts.py
- vimp update
  - update scripts.py
  - update each repo with git pull
  - do this in parallell
- co-existing various versions
  - vimp is actually able to support several co-existing different versions
    - e.g., if foo can require and use bar-1.0 while baz can require and use
      bar-0.5
    - however, this places a lot of burden on scripts.py maintenance
    - consider dropping support, or see if this can be done in an easier way
- see if we can make scripts.py format simpler
- consider making vimp interface for vim through python

Prioritized
- use dulwich to extract git projects, update git projs
- disable-enable redownloads, fix.
- check installed-folder first when listing installs
- enable to add/delete from vimprc
- for vimprc-stuff, add symlink from vim/bundle/vimp
- when symlinking, make sure we don't overwrite any existing bundles
- if a depends on b and we delete b, then a can't work and we should
   delete (or ask or notify) that a will not work any more.

Misc
- glob-extract is completely broken
- implement gc
- remove cached download after installing
- use full package names everywhere, only use alias at the highest level

Hooking into vim:
- put vimprc in autoload, enable pathogen from here
- put rest (if anything) in bundle/vimp

Refactoring:
- refactor the code in general
- list of installs, check installed/ then check symlinks (faster, more robust)
- create an archive.py for transparently working with various archives

Packages to add
- gundo
- rainbow parenthesis

Packages to consider
- neocomplcache
- syntastic
- autoclose
- better powerline colors for nerdtree
- ack.vim
- tagbar
- see also vivify vim

Problems
- If you install powerline, then install syntastic or fugitive, you have to
run ":PowerlineClearCache" for it to work. The same goes when uninstalling
fugitive, have to clear that cache.  We need to add enable-hooks and
disable-hooks so that disabling fugitive will also run
":PowerlineClearCache" but only if powerline is installed.
